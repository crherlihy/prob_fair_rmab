# Unless otherwise noted, command line args (exist and) supercede these settings
# Unless a list of parameters are accepted (see e.g. POLICY_NAMES), parameters may not be varied over a simulation.
# To vary parameters, use a shell script.

[general]
# General configuration or control flow settings
TRIAL_NAME: cpap_experiments
    # Use in file and folder names (see [paths])
    # Not implemented as a command line arg
DATE: 20220505
    # Use in file naming, format YYYYMMDD
    # Not implemented as a command line arg
    
LOG_SIMULATION_FLAG: True
    # Flag for saving of simulation information; results to database

CLUSTER: False
    # Flag for whether we're running on the cluster or not
    
[paths]
# Filepath configuration. Not implemented as a command line arg

root_dir: .
data_dir: ${root_dir}/data
cpap_dir: ${data_dir}/cpap

logs: ${root_dir}/logs
logs_dir: ${logs}/${general:TRIAL_NAME}
error_dir: ${logs_dir}/errors

results: ${root_dir}/results
results_dir: ${results}/${general:TRIAL_NAME}

plots: ${root_dir}/plots
plots_dir: ${plots}/${general:TRIAL_NAME}

[database]
db: prob_fair
user: root
# password: <your password here>
host: localhost
# port: <PORT>
primary_key: auto_id
cluster: ${general:CLUSTER}

[cohort]
# COHORT_NAMES and RUN_COHORT_FLAG may be superceded by --cohort_name command line arg
COHORT_NAMES: CPAPCohort, SyntheticCohort, 
    A
    # COHORT_NAMES in alphabetic order, with custom names at the end
    # COHORT_NAMES must have a corresponding section below (e.g. [cohort_cpap])
RUN_COHORT_FLAGS: True, False,
    False
    # To run a cohort, set its entry to True

###############################################   
# If the following parameters are not specified 
# (a) via command line or 
# (b) in the relevant subsection below, 
# these values are taken as the default.

ARM_TYPE: CollapsingArm
    # Arm class name (e.g. CollapsingArm, RestlessArm).
N_ARMS: 100
    # Number of arms in a cohort (N). 
COHORT_SEED: 0
    # Governs transition matrix generation, forward/reverse/random order
    # Governs arm transitions in the absence of calling arm.set_seed(seed)

LOCAL_REWARD: belief_identity
    # String characterizing local reward function rho(b,t). 
    # Recognized strings: belief_identity, mate21_concave
GLOBAL_REWARD: np.sum
    # Callable global reward function R
    # Not implemented as a command line arg   
REWARD_DISCOUNT: 1.0
    # Discount factor beta, float
    # Not implemented as a command line arg
# rho: 
    # Local reward function of belief, if unspecified will be constructed by LOCAL_REWARD str
    # Not implemented as a command line arg
# r: 
    # Local reward function of state, if unspecified will be constructed by (1) rho, (2) LOCAL_REWARD str
    # Not implemented as a command line arg
# lambd: 20
    # Optional const used in mate21_concave local reward function, defaults to 20
    # Not implemented as a command line arg

N_STATES: 2
    # Number of possible states
    # Not implemented as a command line arg
INITIAL_STATE: -1
    # INITIAL_STATE = -1 == random
    # Not implemented as a command line arg
N_ACTIONS: 2
    # Number of possible actions
    # Not implemented as a command line arg  
PULL_ACTION: 1
    # Which action is an intervention/pull?
    # Not implemented as a command line arg

[cohort_CPAPCohort]
COHORT_TYPE: CPAPCohort
N_GENERAL: 0
    # Number of general demographic arms
N_MALE: 0
    # Number of male demographic arms
N_FEMALE: 0
    # Number of female demographic arms
N_ADHERING: 0
    # Number of `adhering` cluster arms, Kang et. al. 2013
N_NONADHERING: 0
    # Number of `non-adhering` cluster arms, Kang et. al. 2013
BASIS_DIR: ${paths:cpap_dir}
    # Directory where CPAP data is stored.
INTERVENTION_EFFECT: 1.1
    # Effect of intervention, one per state. 
    # <1: negative effect, =1: no effect, >1: postive effect
SIGMA: 1.0
    # Logistic noise added to the transition matrices
TRUNCATE_ADHERING: True
    # Boolean, noise applied to any adhering type arms will only shift them towards more adherence
TRUNCATE_NONADHERING: True
    # Boolean, noise applied to any non-adhering type arms will only shift them towards less adherence

[policy]
# POLICY_NAMES and RUN_POLICY_FLAG may be superceded by --policy_name command line arg
POLICY_NAMES: MathProgPolicy, MyopicPolicy, NoActPolicy, ProbFairPolicy, 
    RandomPolicy, RoundRobinPolicy, WhittleIndexPolicy
    # POLICY_NAMES in alphabetic order, with custom names at the end
    # POLICY_NAME must have a corresponding section below (e.g. [policy_ProbFairPolicy])
    # If POLICY_TYPE is not specified, POLICY_TYPE=POLICY_NAME is taken.
RUN_POLICY_FLAGS: False, False, True, True,
    False, False, False
    # To run a policy, set its entry to True
    
###############################################   
# If the following parameters are not specified 
# (a) via command line or 
# (b) in the relevant subsection below, 
# these values are taken as the default.

K: 20
    # Pull budget, must be an int 0<=k<=N_ARMS
HORIZON: 180
    # Length of a simulation, T
INTERVAL_LEN: 10
    # Length of an interval.
    # Used in IntervalHeuristicSimulation.

[policy_MathProgPolicy]
POLICY_TYPE: MathProgPolicy
    # Must be the name of a Policy class
INTERVAL_LEN: 10
    # Length of an interval for MathProgPolicy only. If not specified, the default above is used.
MIN_SEL_FRAC: 0.1
    # Minimum selection fraction of any arm in any interval.
MIN_PULL_PER_PD: 1
    # Minimum times an arm must be pulled in an interval.
    
[policy_MyopicPolicy]
POLICY_TYPE: MyopicPolicy
    # Must be the name of a Policy class

[policy_NoActPolicy]
POLICY_TYPE: NoActPolicy
    # Must be the name of a Policy class

[policy_ProbFairPolicy]
POLICY_TYPE: ProbFairPolicy
    # Must be the name of a Policy class

POLICY_SEED: 1
    # Seeds the rng of dependent rounding and initial w_0 in solve_P1
PROB_PULL_LOWER_BOUND: 0.1
    # Lower bound on the probability of being pulled over a simulation
PROB_PULL_UPPER_BOUND: 1.0
    # Upper bound on the probability of being pulled over a simulation
# NCUT: 10
    # Number of cuts in the optimization
    # Not implemented as a command line arg

[policy_RandomPolicy]
POLICY_TYPE: RandomPolicy

POLICY_SEED: 1
    # To determine the random order of pulls

[policy_RoundRobinPolicy]
POLICY_TYPE: RoundRobinPolicy

[policy_WhittleIndexPolicy]
POLICY_TYPE: WhittleIndexPolicy

[simulation]
# Constraint params (e.g. k for budget, interval_len for fairness) should be specified in the policy section

SIMULATION_TYPE: Simulation
    # Must be the name of a Simulation class
SIMULATION_SEED: 2
    # Used to seed arm transitions (linked to SIMULATION_ITERATIONS) and 'random' heuristic of IntervalHeuristicSimulation
SIMULATION_ITERATIONS: 100
    # The number of times a simulation is repeated. The only change between repetitions is arm transitions
HEURISTIC: first
    # first, last, or random for IntervalHeuristicSimulation

